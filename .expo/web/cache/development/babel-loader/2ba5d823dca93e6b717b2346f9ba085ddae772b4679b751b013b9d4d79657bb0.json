{"ast":null,"code":"import 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport Home from \"../src/BottomTab/Home\";\nimport AddArticle from \"../src/BottomTab/AddArticle\";\nimport About from \"../src/BottomTab/About\";\nimport Detail from \"../src/Stack/ArticleDetails\";\nimport Edit from \"../src/Stack/EditArticle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createMaterialBottomTabNavigator();\nvar Stack = createStackNavigator();\nexport default function TabNavigator() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            if (route.name === 'Home') {\n              iconName = focused;\n              'home';\n            } else if (route.name === 'Settings') {\n              iconName = focused ? 'ios-list' : 'ios-list-outline';\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: 'tomato',\n          tabBarInactiveTintColor: 'gray'\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: StackNavigator,\n        options: {\n          title: 'HOME'\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"AddArticle\",\n        component: AddArticle,\n        options: {\n          title: 'ADD ARTICLE'\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"About\",\n        component: About,\n        options: {\n          title: 'ABOUT US'\n        }\n      })]\n    })\n  });\n}\nfunction StackNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"HomeScreen\",\n      component: Home,\n      options: {\n        title: 'E-Commerce App'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Detail\",\n      component: Detail,\n      options: {\n        title: 'Article Details'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Edit\",\n      component: Edit,\n      options: {\n        title: 'Edit Article'\n      }\n    })]\n  });\n}","map":{"version":3,"names":["NavigationContainer","createStackNavigator","createMaterialBottomTabNavigator","Ionicons","Home","AddArticle","About","Detail","Edit","jsx","_jsx","jsxs","_jsxs","Tab","Stack","TabNavigator","children","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","Screen","component","StackNavigator","options","title"],"sources":["/home/eyad/Documents/Eyad_DOCS/Doranco_formation/React_Native/Les_Project/new-front/e-commerce/router/MyNav.js"],"sourcesContent":["import 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\n// import { createStackeNavigator } from '@react-navigation/stack';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport Home from '../src/BottomTab/Home'\nimport AddArticle from '../src/BottomTab/AddArticle'\nimport About from '../src/BottomTab/About'\nimport Detail from '../src/Stack/ArticleDetails'\nimport Edit from '../src/Stack/EditArticle'\n\nconst Tab = createMaterialBottomTabNavigator()\nconst Stack = createStackNavigator()\n\nexport default function TabNavigator() {\n    return (\n        <NavigationContainer>\n            <Tab.Navigator\n                screenOptions={({ route }) => ({\n                tabBarIcon: ({ focused, color, size }) => {\n                    let iconName;\n\n                    if (route.name === 'Home') {\n                    iconName = focused\n                        // ? 'ios-information-circle'\n                        // : 'ios-information-circle-outline';\n                        'home'\n                    } else if (route.name === 'Settings') {\n                        iconName = focused ? 'ios-list' : 'ios-list-outline';\n                    }\n\n                    // You can return any component that you like here!\n                    return <Ionicons name={iconName} size={size} color={color} />;\n                },\n                    tabBarActiveTintColor: 'tomato',\n                    tabBarInactiveTintColor: 'gray',\n                })}\n            >\n                <Tab.Screen name=\"Home\" component={StackNavigator} options={{title: 'HOME'}} />\n                <Tab.Screen name=\"AddArticle\" component={AddArticle} options={{title: 'ADD ARTICLE'}} />\n                <Tab.Screen name=\"About\" component={About} options={{title: 'ABOUT US'}} />\n            </Tab.Navigator>\n        </NavigationContainer>\n    )\n}\n\nfunction StackNavigator() {\n    \n    return (\n        <Stack.Navigator>\n            <Stack.Screen name=\"HomeScreen\" component={Home} options={{title: 'E-Commerce App'}} />\n            <Stack.Screen name=\"Detail\" component={Detail} options={{title: 'Article Details'}} />\n            <Stack.Screen name=\"Edit\" component={Edit} options={{title: 'Edit Article'}} />\n        </Stack.Navigator>\n    )\n}\n\n\n// export default function App() {\n//     return (\n        \n//             <TabNavigator />\n        \n//     )\n// }"],"mappings":"AAAA,OAAO,8BAA8B;AACrC,SAASA,mBAAmB,QAAQ,0BAA0B;AAE9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,gCAAgC,QAAQ,wCAAwC;AACzF,OAAOC,QAAQ;AAEf,OAAOC,IAAI;AACX,OAAOC,UAAU;AACjB,OAAOC,KAAK;AACZ,OAAOC,MAAM;AACb,OAAOC,IAAI;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE3C,IAAMC,GAAG,GAAGX,gCAAgC,CAAC,CAAC;AAC9C,IAAMY,KAAK,GAAGb,oBAAoB,CAAC,CAAC;AAEpC,eAAe,SAASc,YAAYA,CAAA,EAAG;EACnC,OACIL,IAAA,CAACV,mBAAmB;IAAAgB,QAAA,EAChBJ,KAAA,CAACC,GAAG,CAACI,SAAS;MACVC,aAAa,EAAE,SAAAA,cAAAC,IAAA;QAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;QAAA,OAAQ;UAC/BC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAA8B;YAAA,IAA3BC,OAAO,GAAAD,KAAA,CAAPC,OAAO;cAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;cAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;YAC/B,IAAIC,QAAQ;YAEZ,IAAIN,KAAK,CAACO,IAAI,KAAK,MAAM,EAAE;cAC3BD,QAAQ,GAAGH,OAAO;cAGd,MAAM;YACV,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,UAAU,EAAE;cAClCD,QAAQ,GAAGH,OAAO,GAAG,UAAU,GAAG,kBAAkB;YACxD;YAGA,OAAOb,IAAA,CAACP,QAAQ;cAACwB,IAAI,EAAED,QAAS;cAACD,IAAI,EAAEA,IAAK;cAACD,KAAK,EAAEA;YAAM,CAAE,CAAC;UACjE,CAAC;UACGI,qBAAqB,EAAE,QAAQ;UAC/BC,uBAAuB,EAAE;QAC7B,CAAC;MAAA,CAAE;MAAAb,QAAA,GAEHN,IAAA,CAACG,GAAG,CAACiB,MAAM;QAACH,IAAI,EAAC,MAAM;QAACI,SAAS,EAAEC,cAAe;QAACC,OAAO,EAAE;UAACC,KAAK,EAAE;QAAM;MAAE,CAAE,CAAC,EAC/ExB,IAAA,CAACG,GAAG,CAACiB,MAAM;QAACH,IAAI,EAAC,YAAY;QAACI,SAAS,EAAE1B,UAAW;QAAC4B,OAAO,EAAE;UAACC,KAAK,EAAE;QAAa;MAAE,CAAE,CAAC,EACxFxB,IAAA,CAACG,GAAG,CAACiB,MAAM;QAACH,IAAI,EAAC,OAAO;QAACI,SAAS,EAAEzB,KAAM;QAAC2B,OAAO,EAAE;UAACC,KAAK,EAAE;QAAU;MAAE,CAAE,CAAC;IAAA,CAChE;EAAC,CACC,CAAC;AAE9B;AAEA,SAASF,cAAcA,CAAA,EAAG;EAEtB,OACIpB,KAAA,CAACE,KAAK,CAACG,SAAS;IAAAD,QAAA,GACZN,IAAA,CAACI,KAAK,CAACgB,MAAM;MAACH,IAAI,EAAC,YAAY;MAACI,SAAS,EAAE3B,IAAK;MAAC6B,OAAO,EAAE;QAACC,KAAK,EAAE;MAAgB;IAAE,CAAE,CAAC,EACvFxB,IAAA,CAACI,KAAK,CAACgB,MAAM;MAACH,IAAI,EAAC,QAAQ;MAACI,SAAS,EAAExB,MAAO;MAAC0B,OAAO,EAAE;QAACC,KAAK,EAAE;MAAiB;IAAE,CAAE,CAAC,EACtFxB,IAAA,CAACI,KAAK,CAACgB,MAAM;MAACH,IAAI,EAAC,MAAM;MAACI,SAAS,EAAEvB,IAAK;MAACyB,OAAO,EAAE;QAACC,KAAK,EAAE;MAAc;IAAE,CAAE,CAAC;EAAA,CAClE,CAAC;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}